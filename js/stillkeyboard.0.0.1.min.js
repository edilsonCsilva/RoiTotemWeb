var activeComponent=null
var containerstillkeyboard=null
var keyboardNum=[1,2,3,4,5,6,7,8,9,0,"Entrer"]
var tabComponent =[];










//function construtoras

function InputElement(id,name,positionTheScreen,taborder){
    return {
        _id:id,
        _name:name,
        _positionTheScreen:positionTheScreen,
        _taborder:taborder
    }
}





//Debug Tirar

function dd(objects){
    var data =  new Date();
    console.log("***********************************************************\n")
    console.log("**********************Debug********************************\n")
    console.log("**********************"+data+"********************************\n")
    console.log("***********************************************************\n")
    console.log("\n")
    console.log(objects)
    console.log("\n")
    console.log("***********************************************************\n")

    
}



//Funcoes 


function __initStillKeyboard(){
    var msn="Container de Teclado Indefinido: ID:containerstillkeyboard"
    try{
        containerstillkeyboard=$("#containerstillkeyboard")
        if(typeof containerstillkeyboard.length && containerstillkeyboard.length > 0){
            containerstillkeyboard=containerstillkeyboard[0]
            var elemPagerInput=$(".onfocusClick")
            for(var poss=0 ; poss < elemPagerInput.length;poss++){
                var posicao=elemPagerInput[poss].getBoundingClientRect()
                var componetPositionScreen={
                    bottom: posicao.bottom,
                    height: posicao.height,
                    left: posicao.left,
                    right: posicao.right,
                    top: posicao.top,
                    width: posicao.width,
                    x: posicao.x,
                    y: posicao.y

                }
                tabComponent.push(new InputElement(
                    elemPagerInput[poss].id,
                    elemPagerInput[poss].name,
                    componetPositionScreen,
                    elemPagerInput[poss].getAttribute("taborder")
                    ))
            }
        }else{
            alert(msn)
            return false
        }
    }catch(e){
        console.log(msn)
        alert(msn)
        return false
    }
}



function __setOnActionClicks(){
    $(".onclickAction").on("click",function(event){
        __events(this,containerstillkeyboard)
    })
}

function _setScroll(x,y){
    window.scrollTo( x, y );
}
function __openKeyBoard(){

    try{
       $(containerstillkeyboard)
        .addClass("still-keyboard-open")
        .slideDown(2000,
            function(){
                //alert("Slide concluido");
                __setOnActionClicks()
                _setScroll(0,activeComponent.eixoPositions.y)
            }
        );

    }catch(e){ 
        console.log(e)
        alert("Error")}
}

function __closeKeyBoard(){

    try{
       $(containerstillkeyboard)
        .removeClass("still-keyboard-open")
        .addClass("still-keyboard-close")
        .slideUp(2000,
            function(){
                //alert("Slide concluido");
                __setOnActionClicks()
                _setScroll(0,activeComponent.eixoPositions.y)
            }
        );

    }catch(e){ 
        console.log(e)
        alert("Error")}
}


//Funcoes 


//Inicia o Documento
$(document).ready(function(){
      __initStillKeyboard()
     $(".onfocusClick").on("click",function(event){
        activeComponent = {
            self:this,
            uuid:this.getAttribute("id"),
            value:$(this).val(),
            typekeyborad :this.getAttribute("stilltype"),
            eixoPositions :this.getBoundingClientRect() 
        };
        __openKeyBoard()

     })
})






function __events(events,activatedComponent){
    var eventsClick=parseInt($(events).attr("stillvalue"));
   
    if(eventsClick==-1){
        __closeKeyBoard()

    } else if(eventsClick==-3){
        if(activeComponent.self.value.length > 0){
            var size=activeComponent.self.value.length-1
            var objectCopy =activeComponent.self.value
            $("#"+activeComponent.uuid).val(objectCopy.substr(0, size))

            return false;
        }else{
            __closeKeyBoard()
        }
    }else if(eventsClick >=0 && eventsClick <=9){
        var newValues=(activeComponent.self.value+eventsClick)
        activeComponent.self.value=newValues
        return false;
    }else{
        alert("Evento NÃ£o Loacalizado : ["+eventsClick+"]")
    }


 

     
   


}
